# Generated by Django 5.2.5 on 2025-08-26 19:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="schools.program",
                    ),
                ),
            ],
            options={
                "unique_together": {("program", "name")},
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("region", models.CharField(max_length=120)),
                ("district", models.CharField(max_length=120)),
                ("passed", models.IntegerField(default=0)),
                (
                    "residency",
                    models.CharField(
                        choices=[("Day", "Day"), ("Boarding", "Boarding")],
                        default="boarding",
                        max_length=20,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Mixed", "Mixed"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("wassce_ranking", models.IntegerField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=300)),
                (
                    "phone",
                    models.CharField(
                        default="Contact the Ghana Education Service for details",
                        max_length=50,
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        default="Contact the school administration", max_length=255
                    ),
                ),
                (
                    "website",
                    models.CharField(
                        default="Contact the school administration", max_length=255
                    ),
                ),
                (
                    "facilities",
                    models.ManyToManyField(blank=True, to="schools.facility"),
                ),
                ("programs", models.ManyToManyField(blank=True, to="schools.program")),
            ],
        ),
        migrations.CreateModel(
            name="SchoolCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("is_custom", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("added_on", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="school_offerings",
                        to="schools.course",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="school_courses",
                        to="schools.school",
                    ),
                ),
                (
                    "source_program",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="schools.program",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="school",
            name="courses",
            field=models.ManyToManyField(
                blank=True, through="schools.SchoolCourse", to="schools.course"
            ),
        ),
        migrations.AddConstraint(
            model_name="schoolcourse",
            constraint=models.UniqueConstraint(
                condition=models.Q(("course__isnull", False)),
                fields=("school", "course"),
                name="unique_school_course",
            ),
        ),
        migrations.AddConstraint(
            model_name="schoolcourse",
            constraint=models.UniqueConstraint(
                fields=("school", "name"), name="unique_school_course_name"
            ),
        ),
    ]
